// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: person.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Simon.GrpcService.API {
  public static partial class PersonService
  {
    static readonly string __ServiceName = "Acadsoc.GrpcService.Server.PersonService";

    static readonly grpc::Marshaller<global::Simon.GrpcService.API.RequestUserId> __Marshaller_Acadsoc_GrpcService_Server_RequestUserId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Simon.GrpcService.API.RequestUserId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Simon.GrpcService.API.ResponseUserInfo> __Marshaller_Acadsoc_GrpcService_Server_ResponseUserInfo = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Simon.GrpcService.API.ResponseUserInfo.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Simon.GrpcService.API.ReponsePersonList> __Marshaller_Acadsoc_GrpcService_Server_ReponsePersonList = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Simon.GrpcService.API.ReponsePersonList.Parser.ParseFrom);

    static readonly grpc::Method<global::Simon.GrpcService.API.RequestUserId, global::Simon.GrpcService.API.ResponseUserInfo> __Method_GetPersonInfoById = new grpc::Method<global::Simon.GrpcService.API.RequestUserId, global::Simon.GrpcService.API.ResponseUserInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPersonInfoById",
        __Marshaller_Acadsoc_GrpcService_Server_RequestUserId,
        __Marshaller_Acadsoc_GrpcService_Server_ResponseUserInfo);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Simon.GrpcService.API.ReponsePersonList> __Method_GetAll = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Simon.GrpcService.API.ReponsePersonList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAll",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_Acadsoc_GrpcService_Server_ReponsePersonList);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Simon.GrpcService.API.PersonReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PersonService</summary>
    [grpc::BindServiceMethod(typeof(PersonService), "BindService")]
    public abstract partial class PersonServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Simon.GrpcService.API.ResponseUserInfo> GetPersonInfoById(global::Simon.GrpcService.API.RequestUserId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Simon.GrpcService.API.ReponsePersonList> GetAll(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for PersonService</summary>
    public partial class PersonServiceClient : grpc::ClientBase<PersonServiceClient>
    {
      /// <summary>Creates a new client for PersonService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public PersonServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PersonService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public PersonServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected PersonServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected PersonServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Simon.GrpcService.API.ResponseUserInfo GetPersonInfoById(global::Simon.GrpcService.API.RequestUserId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPersonInfoById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Simon.GrpcService.API.ResponseUserInfo GetPersonInfoById(global::Simon.GrpcService.API.RequestUserId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPersonInfoById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Simon.GrpcService.API.ResponseUserInfo> GetPersonInfoByIdAsync(global::Simon.GrpcService.API.RequestUserId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPersonInfoByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Simon.GrpcService.API.ResponseUserInfo> GetPersonInfoByIdAsync(global::Simon.GrpcService.API.RequestUserId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPersonInfoById, null, options, request);
      }
      public virtual global::Simon.GrpcService.API.ReponsePersonList GetAll(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAll(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Simon.GrpcService.API.ReponsePersonList GetAll(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Simon.GrpcService.API.ReponsePersonList> GetAllAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Simon.GrpcService.API.ReponsePersonList> GetAllAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAll, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override PersonServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PersonServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(PersonServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetPersonInfoById, serviceImpl.GetPersonInfoById)
          .AddMethod(__Method_GetAll, serviceImpl.GetAll).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PersonServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetPersonInfoById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Simon.GrpcService.API.RequestUserId, global::Simon.GrpcService.API.ResponseUserInfo>(serviceImpl.GetPersonInfoById));
      serviceBinder.AddMethod(__Method_GetAll, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Simon.GrpcService.API.ReponsePersonList>(serviceImpl.GetAll));
    }

  }
}
#endregion
